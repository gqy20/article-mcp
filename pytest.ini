[tool:pytest]
# pytest配置文件 - 针对6工具架构优化

# 测试发现
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# 输出配置
addopts =
    -v
    --tb=short
    --strict-markers
    --strict-config
    --color=yes
    --durations=10
    --cov=src/article_mcp
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80

# 标记定义
markers =
    # 测试类型标记
    unit: 单元测试 - 测试单个函数或类的功能
    integration: 集成测试 - 测试多个组件的协作
    system: 系统测试 - 测试完整系统功能
    api: API测试 - 测试外部API集成
    performance: 性能测试 - 测试性能指标
    stress: 压力测试 - 测试系统极限

    # 工具特定标记
    search_tools: 搜索工具测试
    article_tools: 文章工具测试
    reference_tools: 参考文献工具测试
    relation_tools: 关系分析工具测试
    quality_tools: 质量评估工具测试
    batch_tools: 批量工具测试

    # 6工具架构特定标记
    six_tools: 6工具架构测试
    workflow: 工作流程测试
    regression: 回归测试

    # 执行速度标记
    slow: 慢速测试（超过5秒）
    fast: 快速测试（少于1秒）

    # 网络相关标记
    network: 需要网络连接的测试
    offline: 离线测试（不需要网络）
    requires_network: 标记需要网络的测试

    # 数据库标记
    database: 需要数据库的测试
    mock: 使用模拟数据的测试

    # 环境标记
    local: 本地环境测试
    ci: CI环境测试

    # 6工具工作流程场景标记
    researcher_scenario: 研究者文献综述场景
    student_scenario: 学生作业场景
    clinical_scenario: 临床证据搜索场景

# 最小版本要求
minversion = 7.0

# 过滤警告
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# 异步测试配置
asyncio_mode = auto

# 日志配置
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# 缓存配置
cache_dir = .pytest_cache

# JUnit XML报告（用于CI集成）
junit_family = xunit2
junit_logging = all